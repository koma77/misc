apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
      maxSurge: {{ .Values.maxSurge }}
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      {{- if .Values.pod_annotations }}
      annotations:
        {{- range $key, $value := .Values.pod_annotations }}
        {{ $key }}: {{ $value }} {{ end }}{{ end }}
      labels:
        app: {{ .Release.Name }}
      name: {{ .Release.Name }}
    spec:
      {{- if .Values.serviceAccountToken }}
      automountServiceAccountToken: true
      {{- else }}
      automountServiceAccountToken: false
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: vpc
                  operator: In
                  values:
                    - {{ .Values.nodeselector }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Release.Name }}
                topologyKey: kubernetes.io/hostname
            - weight: 75
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Release.Name }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
      restartPolicy: Always
      containers:
      - image: "{{ .Values.image }}:{{ .Values.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: {{ .Release.Name }}
        env:
          - name: NODE_ENV
            value: {{ .Values.env }}
          - name: NEW_RELIC_APP_NAME
            value: {{ .Release.Name }}.{{ .Values.env }}
          {{- range $key, $val := .Values.environment }}
          - name: {{ $key }}
            value: {{ $val | quote }} {{ end }}
{{- if .Values.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}{{- end }}
{{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 12 }}{{- end }}
{{- if .Values.watchdog }}{{- if .Values.watchdog.enabled }}
      -
{{ toYaml .Values.watchdog.config | indent 8 }}
        env:
        {{- range $k, $v := .Values.watchdog.environment }}
        - name: {{ $k }}
          value: {{ $v | quote }} {{ end }}
        {{- range $k, $v := .Values.watchdog.extraEnvs }}
        - name: {{ $k }}
          value: {{ $v | quote }} {{ end }}
        {{- if .Values.watchdog.roles }}
        - name: WATCHDOG_ROLES
          value: {{ .Values.watchdog.roles | quote }} {{ end }}
      volumes:
        - name: watchdog
          secret:
            secretName: watchdog-secret
{{- end }}{{- end}}
